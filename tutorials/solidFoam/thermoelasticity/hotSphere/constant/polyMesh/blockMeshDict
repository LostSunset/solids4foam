/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant/polyMesh";
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Model Description
// One eighth of a hollow sphere cylinder

// Setup m4 stuff



// Geometry parameters in metres

 // sphere inner radius
 // sphere outer radius

// For the curves, we need to define








// define mesh density: ratio mc/mr = 15 for uniform cells
 // number of cells in radial direction
//define(mc, 75) // half the number of cells in circumferential direction
 // half the number of cells in circumferential direction

// start of blockMeshDict

convertToMeters 1;

vertices
(
    (0 0 0.19)
    (0.134350288425437 0 0.134350288425437)
    (0.19 0 0)
    (0.134350288425437 0.134350288425437 0)
    (0 0.19 0)
    (0 0.134350288425437 0.134350288425437)
    (0.109696551146029 0.109696551146029 0.109696551146029)

    (0 0 0.2)
    (0.141421356237302 0 0.141421356237302)
    (0.2 0 0)
    (0.141421356237302 0.141421356237302 0)
    (0 0.2 0)
    (0 0.141421356237302 0.141421356237302)
    (0.115470053837925 0.115470053837925 0.115470053837925)
);

blocks
(
    hex (0 1 6 5 7 8 13 12) billet (25 25 5) simpleGrading (1 1 1)
    hex (1 2 3 6 8 9 10 13) billet (25 25 5) simpleGrading (1 1 1)
    hex (5 6 3 4 12 13 10 11) billet (25 25 5) simpleGrading (1 1 1)
);

edges
(
    arc 0 1 (0.175537111177143 0 0.0727098521493717)
    arc 7 8 (0.184775906502255 0 0.0765366864730228)

    arc 2 1 (0.0727098521493717 0 0.175537111177143)
    arc 9 8 (0.0765366864730228 0 0.184775906502255)

    arc 2 3 (0.175537111177143 0.0727098521493717 0)
    arc 10 9 (0.184775906502255 0.0765366864730228 0)

    arc 0 5 (0 0.0727098521493717 0.175537111177143)
    arc 12 7 (0 0.0765366864730228 0.184775906502255)

    arc 4 3 (0.0727098521493717 0.175537111177143 0)
    arc 10 11 (0.0765366864730228 0.184775906502255 0)

    arc 4 5 (0 0.175537111177143 0.0727098521493717)
    arc 12 11 (0 0.184775906502255 0.0765366864730228)

    arc 5 6 (0.0633333333333333 0.126666666666667 0.126666666666667)
    arc 13 12 (0.0666666666666667 0.133333333333333 0.133333333333333)

    arc 3 6 (0.126666666666667 0.126666666666667 0.0633333333333333)
    arc 13 10 (0.133333333333333 0.133333333333333 0.0666666666666667)

    arc 1 6 (0.126666666666667 0.0633333333333333 0.126666666666667)
    arc 13 8 (0.133333333333333 0.0666666666666667 0.133333333333333)
);

patches
(
    symmetryPlane symmx
    (
        (0 5 12 7)
        (5 4 11 12)
    )

    symmetryPlane symmy
    (
        (7 8 1 0)
        (8 9 2 1)
    )

    symmetryPlane symmz
    (
        (9 10 3 2)
        (10 11 4 3)
    )

    patch inside
    (
        (0 1 6 5)
        (1 2 3 6)
        (6 3 4 5)
    )

    patch outside
    (
        (7 12 13 8)
        (8 13 10 9)
        (12 11 10 13)
    )
);

mergePatchPairs
(
);

// ************************************************************************* //
