#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | foam-extend: Open Source CFD
#  \\    /   O peration     | Version:     4.1
#   \\  /    A nd           | Web:         http://www.foam-extend.org
#    \\/     M anipulation  | For copyright notice see file Copyright
#------------------------------------------------------------------------------
# License
#     This file is part of foam-extend.
#
#     foam-extend is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation, either version 3 of the License, or (at your
#     option) any later version.
#
#     foam-extend is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     Alltest
#
# Description
#    Run all the solids4foam tutorials for only one time-step and one iteration.
#
#------------------------------------------------------------------------------

# FUNCTIONS
#
printUsage () {
cat <<EOF
Usage: $0
Quickly tests the tutorials and writes out the scheme/solver information

Options are:
-d         sets up a default scheme on all schemes
-h         help
EOF
}

#
# VARIABLE
#
MAIN_CONTROL_DICT=

for i in \
  $HOME/.$WM_PROJECT-$WM_PROJECT_VERSION \
  $HOME/.$WM_PROJECT/$WM_PROJECT_VERSION \
  $HOME/.$WM_PROJECT \
  $WM_PROJECT_DIR/etc \
  ;
do
  if [ -f "$i/controlDict" ]; then
     MAIN_CONTROL_DICT="$i/controlDict"
     break
  fi
done

# Check if the main control dict was found
if [[ ! -z "${MAIN_CONTROL_DICT}" ]]
then
    echo "The MAIN_CONTROL_DICT was not found!"
    echo "You can create one with: "
    echo "cp ${WM_PROJECT_DIR}/etc/controlDict-EXAMPLE ${WM_PROJECT_DIR}/etc/controlDict"
fi

TUTORIALS_DIR=.
TEST_RUN_DIR=../tutorialsTest
FV_SCHEMES=\
" \
    gradScheme \
    divScheme \
    laplacianScheme \
    interpolationScheme \
    snGradScheme \
    fluxRequired \
"
SCHEMES_FILE="FvSchemes"
SCHEMES_TEMP="FvSchemes.temp"
SOLVERS_FILE="FvSolution"
SOLVERS_TEMP="FvSolution.temp"

#
# MAIN
#

if [ -d "$TEST_RUN_DIR" ] ; then
    rm -rf $TEST_RUN_DIR
fi

echo "Modifying ${MAIN_CONTROL_DICT}"
if [ -e ${MAIN_CONTROL_DICT}.org ]
then
    echo "File " ${MAIN_CONTROL_DICT}.org " already exists"
    echo "Did Alltest fail in some way and then run again?"
    exit 1
fi

# Clean up on termination and on Ctrl-C
trap 'mv ${MAIN_CONTROL_DICT}.org ${MAIN_CONTROL_DICT} 2>/dev/null; exit 0' \
    EXIT TERM INT
cp ${MAIN_CONTROL_DICT} ${MAIN_CONTROL_DICT}.org

sed \
-e s/"\(fvSchemes[ \t]*\)\([0-9]\);"/"\1 1;"/g \
-e s/"\(fvSolution[ \t]*\)\([0-9]\);"/"\1 1;"/g \
${MAIN_CONTROL_DICT}.org > ${MAIN_CONTROL_DICT}

echo "Copying the tutorials"
cp -a ${TUTORIALS_DIR} ${TEST_RUN_DIR}

echo "Modifying the controlDicts to run only one time step"
cd ${TEST_RUN_DIR}

for CD in `find . -name "controlDict*"`
do
    mv ${CD} ${CD}.org
    sed \
   -e s/"\(startFrom[ \t]*\)\([a-zA-Z]*\);"/"\1 latestTime;"/g \
    -e s/"\(stopAt[ \t]*\)\([a-zA-Z]*\);"/"\1 nextWrite;"/g \
    -e s/"\(writeControl[ \t]*\)\([a-zA-Z]*\);"/"\1 timeStep;"/g \
    -e s/"\(writeInterval[ \t]*\)\([0-9a-zA-Z.-]*\);"/"\1 1;"/g \
    ${CD}.org > ${CD}
done

# set nCorrectors to 1 for solids4foam solvers
for SP in `find . -name "solidProperties"`
do
    mv ${SP} ${SP}.org
    sed \
   -e s/"//nCorrectors.*;"/"nCorrectors 1;"/g \
   -e s/"nCorrectors.*;"/"nCorrectors 1;"/g \
    ${SP}.org > ${SP}
done

./Allrun

sed -e :a -e '/\\$/N; s/\\\n//; ta' Allrun > temp
APPLICATIONS=\
    `grep "applications=" temp | sed 's/applications=\"\([A-Za-z \t]*\)\"/\1/g'`

rm $SCHEMES_FILE > /dev/null 2>&1
for APP in $APPLICATIONS
do
    echo $APP >> $SCHEMES_FILE
    echo "$APP: " | tr -d "\n" >> $SOLVERS_FILE
    for ST in $FV_SCHEMES
    do
        rm $SCHEMES_TEMP > /dev/null 2>&1
        rm $SOLVERS_TEMP > /dev/null 2>&1
        echo "  ${ST}" >> $SCHEMES_FILE
        for LOG in `find ${APP} -name "log.${APP}"`
        do
            for S in `grep ${ST} ${LOG} | cut -d" " -f4`
            do
                echo "    ${S}" >> $SCHEMES_TEMP
            done
        echo `grep solver ${LOG} | cut -d" " -f4` >> $SOLVERS_TEMP
        done
        if [ -f $SCHEMES_TEMP ] ; then
            cat $SCHEMES_TEMP | sort -u >> $SCHEMES_FILE
        fi
    done
    cat $SOLVERS_TEMP | tr " " "\n" | sort -u | tr "\n" " " >> $SOLVERS_FILE
    echo "" >> $SOLVERS_FILE
done


# ----------------------------------------------------------------- end-of-file
