# Build and test solids4foam using Docker containers
name: Build and test

on:
  workflow_dispatch:
  pull_request:

#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref }}
#  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container-image:
          - { name: "OpenFOAM-v2312", image: "opencfd/openfoam-dev:2312", source: "/usr/lib/openfoam/openfoam2312/etc/bashrc", buildflags: "-j" }
          - { name: "OpenFOAM-v2012", image: "philippic/openfoam-v2012-ubuntu20.04:latest", source: "/usr/lib/openfoam/openfoam2012/etc/bashrc", buildflags: "-j" }
          - { name: "OpenFOAM-9", image: "philippic/openfoam-9-ubuntu20.04:latest", source: "/opt/openfoam9/etc/bashrc", buildflags: "-j" }
          - { name: "foam-extend-4.1", image: "philippic/foam-extend-4.1-ubuntu18.04-v2:latest", source: "/home/dockeruser/foam/foam-extend-4.1/etc/bashrc", buildflags: "" }

    container:
      image: ${{ matrix.container-image.image }}
      
    steps:
      - uses: actions/checkout@v3
      
#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /var/lib/docker
#          key: ${{ runner.os }}-docker-${{ matrix.container-image.image }}
#          restore-keys: |
#            ${{ runner.os }}-docker-

      - name: Allwmake
        shell: bash -l {0}
        run: |
          source ${{ matrix.container-image.source }}
          (cd optionalFixes && ./Allreplace)
          ./Allwmake ${{ matrix.container-image.buildflags }}

      - name: Alltest
        shell: bash -l {0}
        run: |
          source ${{ matrix.container-image.source }}
          cd tutorials
          ./Alltest
